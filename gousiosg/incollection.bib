@incollection{G16,
  author = {Georgios Gousios},
  editor={Tim Menzies and Laurie Williams and Thomas Zimmermann},
  title = {Open from the beginning},
  Booktitle={Perspectives in Data Science for Software Engineering},
  year = {2016},
  Publisher= {Morgan Kaufmann},
  Note = {To appear},
  Url = {https://github.com/ds4se/chapters/blob/master/gousiosg/open-from-the-beginning.md}
}

@incollection{RBGM14,
  author = {Peter C. Rigby and Alberto Bacchelli and Georgios Gousios and Murtuza Mukadam},
  editor={Christian Bird and Tim Menzies and Thomas Zimmermann},
  title = {A Mixed Methods Approach to Mining Code Review Data: Examples and a study of multi-commit reviews and pull requests},
  Booktitle={The Art and Science of Analyzing Software Data},
  year = {2015},
  Publisher= {Morgan Kaufmann},
  abstract = {
    Software code review has been considered an important quality assurance
mechanism for the last 35 years. The techniques for conducting modern code reviews
have evolved along with the software industry and have become progressively
incremental and lightweight. We have studied code review in number of
contemporary settings, including Apache, Linux, KDE, Microsoft, Android, and
GitHub. Code review is an inherently social activity, so we have used both
quantitative and qualitative methods to understand the underlying parameters
(or measures) of the process, as well as the rich interactions and motivations
for doing code review. In this chapter, we describe how we have used a mixed
methods approach to triangulate our findings on code review. We also
describe how we use quantitative data to help us sample the most interesting
cases from our data to be analyzed qualitatively. To illustrate code review
research, we provide new results that contrast single and multi-commit reviews.
We find that while multi-commit reviews take longer and have more lines churned than
single commit reviews, the same number of people are involved in both types of
review. To enrich and triangulate our findings, we qualitatively analyze the
characteristics of multi-commit reviews and find that there are two types:
reviews of branches and revisions to single commits. We also examine the
reasons why commits on GitHub pull requests are rejected.
    },
  pages={231--255},
  ISBN = {0124115195},
  Url = {/pub/code-review-mixed-methods.pdf}
}

@incollection{GKAG06B,
  author = {Adriaan de Groot and Sebastian K\"{u}gler and Paul Adams and Georgios Gousios},
    editor="Ernesto Damiani and Brian Fitzgerald and Walt Scacchi and Marco Scotto and Giancarlo Succi",
  title = "Call for Quality: Open Source Software Quality Observation",
  Booktitle="IFIP International Federation for Information Processing",
  ISBN="978-0-387-34225-2",
  pages="57--62",
  year = "2006",
  Volume="203/2006",
  Publisher="Springer Boston",
  Url = "/pub/open-source software-quality-observation.pdf",
  abstract = "This paper describes how a Software Quality Observatory works to evaluate and quantify the quality of an Open Source project. Such a quality mea- surement can be used by organizations intending to deploy an Open Source solution to pick one of the available projects for use. We offer a case description of how the Software Quality Observatory will be applied to the KDE project to document and evaluate its quality practices for outsiders."
}

@InCollection{AKGSC05,
  Author="Stephanos Androutsellis-Theotokis and Vassilios Karakoidas and Georgios Gousios and Diomidis Spinellis and Yannis Charalambidis",
  Title="Building an e-business platform: An experience report",
  Editor="Paul Cunningham and Miriam Cunningham",
  Month=oct,
  Booktitle="Innovation and the knowledge Economy --- Issues, Applications Case Studies",
  Address="Amsterdam, Nethedlands",
  Publisher="IOS Press",
  Year="2005",
  ISBN="1-58603-563-0",
  pages="199-206",
  URL="/pub/building-e-business-platform-experience.pdf", 
  abstract ="The PRAXIS project has been designed to facilitate the interchange of data between government and business entities through direct enterprise application interconnection. The system architecture has been entirely based on emerging technologies, including web services and XML, allowing independent client systems to operate asynchronously with a central server orchestrating and controlling the workflow. An original business document exchange protocol has been developed from the ground up in order to address the specific needs of business to government transactions in the Greek business sector. This paper elaborates on the methodologies and tools used for the development of the project’s coordination point (the server) and its clients, and present the experiences gained during the system’s design, as well as results obtained from the preliminary integration and testing phases."
}

