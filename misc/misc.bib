%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/


%% Created for Georgios Gousios at 2013-02-20 17:23:51 +0100 


%% Saved with string encoding Unicode (UTF-8) 


@article{Breim01,
  title={Random forests},
  author={Breiman, Leo},
  journal={Machine learning},
  volume={45},
  number={1},
  pages={5--32},
  year={2001},
  publisher={Springer}
}

@article{Genue10,
	Abstract = {This paper proposes, focusing on random forests, the increasingly used statistical method for classification and regression problems introduced by Leo Breiman in 2001, to investigate two classical issues of variable selection. The first one is to find important variables for interpretation and the second one is more restrictive and try to design a good parsimonious prediction model. The main contribution is twofold: to provide some experimental insights about the behavior of the variable importance index based on random forests and to propose a strategy involving a ranking of explanatory variables using the random forests score of importance and a stepwise ascending variable introduction strategy.},
	Author = {Robin Genuer and Jean-Michel Poggi and Christine Tuleau-Malot},
	Date-Added = {2013-02-20 16:23:09 +0000},
	Date-Modified = {2013-02-20 16:23:17 +0000},
	Doi = {10.1016/j.patrec.2010.03.014},
	Issn = {0167-8655},
	Journal = {Pattern Recognition Letters},
	Keywords = {High dimensional data},
	Number = {14},
	Pages = {2225 - 2236},
	Title = {Variable selection using random forests},
	Url = {http://www.sciencedirect.com/science/article/pii/S0167865510000954},
	Volume = {31},
	Year = {2010},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QLFZhcmlhYmxlIHNlbGVjdGlvbiB1c2luZyByYW5kb20gZm9yZXN0czAucGRm0hcLGBlXTlMuZGF0YU8RAg4AAAAAAg4AAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAMtobc5IKwAAAC8YTh9WYXJpYWJsZSBzZWxlY3Rpb24gIzE4NjgwMDUucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhoAFzUq3GwAAAAAAAAAAAAEAAgAACSAAAAAAAAAAAAAAAAAAAAAEbWlzYwAQAAgAAMtoX74AAAARAAgAAM1KqQsAAAABABQALxhOAC8XWwAvFkYABch2AAC5VgACAFhNYWNpbnRvc2ggSEQ6VXNlcnM6AGdvdXNpb3NnOgBEb2N1bWVudHM6AGJpYmxpc3RzOgBtaXNjOgBWYXJpYWJsZSBzZWxlY3Rpb24gIzE4NjgwMDUucGRmAA4AWgAsAFYAYQByAGkAYQBiAGwAZQAgAHMAZQBsAGUAYwB0AGkAbwBuACAAdQBzAGkAbgBnACAAcgBhAG4AZABvAG0AIABmAG8AcgBlAHMAdABzADAALgBwAGQAZgAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAFNVc2Vycy9nb3VzaW9zZy9Eb2N1bWVudHMvYmlibGlzdHMvbWlzYy9WYXJpYWJsZSBzZWxlY3Rpb24gdXNpbmcgcmFuZG9tIGZvcmVzdHMwLnBkZgAAEwABLwAAFQACAA///wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgC9AMIAygLcAt4C4wLuAvcDBQMJAxADGQMeAysDLgNAA0MDSAAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAANK}}

@article{Ivers80,
	Author = {Kenneth E. Iverson},
	Date-Added = {2012-10-30 12:19:07 +0000},
	Date-Modified = {2012-10-30 12:19:57 +0000},
	Journal = {Communications of the ACM},
	Month = {Aug},
	Number = {8},
	Title = {Notation as a Tool of Thought},
	Volume = {23},
	Year = {1980}}

@incollection{Futsc06,
	Author = {Gerald Futschek},
	Booktitle = {Informatics Education -- The Bridge between Using and Understanding Computers},
	Date-Added = {2012-10-29 17:05:14 +0000},
	Date-Modified = {2012-10-29 18:54:17 +0000},
	Editor = {Mittermeir, Roland},
	Isbn = {978-3-540-48218-5},
	Keyword = {Computer Science},
	Pages = {159--168},
	Publisher = {Springer Berlin},
	Series = {Lecture Notes in Computer Science},
	Title = {Algorithmic Thinking: The Key for Understanding Computer Science},
	Url = {http://dx.doi.org/10.1007/11915355_15},
	Volume = {4226},
	Year = {2006},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/11915355_15}}

@article{Parr95,
	Author = {Parr, T.J. and Quong, R.W.},
	Date-Added = {2012-10-24 19:08:33 +0000},
	Date-Modified = {2012-10-24 19:08:40 +0000},
	Journal = {Software: Practice and Experience},
	Number = {7},
	Pages = {789--810},
	Publisher = {Wiley Online Library},
	Title = {ANTLR: A predicated-LL (k) parser generator},
	Volume = {25},
	Year = {1995}}

@inproceedings{Torre06,
	Acmid = {1180128},
	Address = {New York, NY, USA},
	Articleno = {29},
	Author = {Torrence, Ann},
	Booktitle = {ACM SIGGRAPH 2006},
	Date-Added = {2012-10-19 12:56:36 +0000},
	Date-Modified = {2012-10-19 12:56:57 +0000},
	Doi = {10.1145/1180098.1180128},
	Isbn = {1-59593-364-6},
	Location = {Boston, Massachusetts},
	Publisher = {ACM},
	Series = {SIGGRAPH '06},
	Title = {Martin Newell's original teapot},
	Url = {http://doi.acm.org/10.1145/1180098.1180128},
	Year = {2006},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/1180098.1180128},
	Bdsk-Url-2 = {http://dx.doi.org/10.1145/1180098.1180128}}

@article{Reshe11,
	Author = {David N. Reshef and Yakir A. Reshef and Hilary K. Finucane and Sharon R. Grossman and Gilean McVean and Peter J. Turnbaugh and Eric S. Lander and Michael Mitzenmacher and Pardis C. Sabeti},
	Date-Added = {2012-06-29 11:11:13 +0000},
	Date-Modified = {2012-06-29 11:15:36 +0000},
	Journal = {Science},
	Month = {Oct},
	Number = {6062},
	Pages = {1518--1524},
	Title = {Detecting Novel Associations in Large Data Sets},
	Volume = {334},
	Year = {2011},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QNERldGVjdGluZyBOb3ZlbCBBc3NvY2lhdGlvbnMgaW4gTGFyZ2UgRGF0YSBTZXRzMC5wZGbSFwsYGVdOUy5kYXRhTxECJgAAAAACJgACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAy2htzkgrAAAALxhOH0RldGVjdGluZyBOb3ZlbCBBc3NvI0QwQTBBMi5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQoKLMsKBOAAAAAAAAAAAAAQACAAAJIAAAAAAAAAAAAAAAAAAAAARtaXNjABAACAAAy2hfvgAAABEACAAAzLCELgAAAAEAFAAvGE4ALxdbAC8WRgAFyHYAALlWAAIAWE1hY2ludG9zaCBIRDpVc2VyczoAZ291c2lvc2c6AERvY3VtZW50czoAYmlibGlzdHM6AG1pc2M6AERldGVjdGluZyBOb3ZlbCBBc3NvI0QwQTBBMi5wZGYADgBqADQARABlAHQAZQBjAHQAaQBuAGcAIABOAG8AdgBlAGwAIABBAHMAcwBvAGMAaQBhAHQAaQBvAG4AcwAgAGkAbgAgAEwAYQByAGcAZQAgAEQAYQB0AGEAIABTAGUAdABzADAALgBwAGQAZgAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAFtVc2Vycy9nb3VzaW9zZy9Eb2N1bWVudHMvYmlibGlzdHMvbWlzYy9EZXRlY3RpbmcgTm92ZWwgQXNzb2NpYXRpb25zIGluIExhcmdlIERhdGEgU2V0czAucGRmAAATAAEvAAAVAAIAD///AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOAMUAygDSAvwC/gMDAw4DFwMlAykDMAM5Az4DSwNOA2ADYwNoAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAA2o=}}

@techreport{Resni08,
	Date-Added = {2012-06-20 11:48:44 +0000},
	Date-Modified = {2012-06-20 11:48:44 +0000},
	Editor = {P. Resnick},
	Institution = {Internet Engineering Task Force},
	Month = {October},
	Number = {5322},
	Title = {Internet Message Format},
	Type = {RFC},
	Year = {2008}}

@article{Spi11i,
	Author = {Diomidis Spinellis},
	Date-Added = {2012-06-20 11:46:01 +0000},
	Date-Modified = {2012-06-20 11:46:01 +0000},
	Issn = {0740-7459},
	Journal = {IEEE Software},
	Month = {September/October},
	Number = {5},
	Pages = {96, 95},
	Title = {Faking it},
	Volume = {28},
	Year = 2011}

@techreport{Jeffe10,
	Author = {Keith Jeffery and Burkhard Neidecker-Lutz},
	Date-Added = {2011-08-09 15:04:04 +0300},
	Date-Modified = {2011-08-09 15:07:19 +0300},
	Institution = {European Commission},
	Title = {The Future of Cloud Computing: Opportunities for {E}uropean Cloud Computing beyond 2010},
	Year = {2010}}

@misc{Berns00,
	Author = {D. J. Bernstein},
	Date-Modified = {2012-06-29 11:34:39 +0000},
	Howpublished = {Online},
	Note = {http://cr.yp.to/proto/maildir.html},
	Title = {Using maildir format},
	Year = {2000}}

@book{Zelle09,
	Author = {Andreas Zeller},
	Date-Added = {2010-12-21 17:54:56 +0200},
	Date-Modified = {2010-12-21 17:56:09 +0200},
	Edition = {2nd},
	Publisher = {Morgan Kaufmann},
	Title = {Why Programs Fail: A Guide to Systematic Debugging},
	Year = {2009}}

@book{Feath05,
	Address = {Englewood Cliffs, NJ},
	Author = {Michael Feathers},
	Date-Added = {2010-12-19 22:10:50 +0200},
	Date-Modified = {2010-12-19 22:11:27 +0200},
	Publisher = {Prentice Hall},
	Title = {Working Effectively with Legacy Code},
	Year = {2005}}

@book{Hunt00,
	Address = {Boston, MA},
	Author = {Andrew Hunt and David Thomas},
	Date-Added = {2010-12-19 22:09:00 +0200},
	Date-Modified = {2010-12-19 22:09:34 +0200},
	Publisher = {Addison-Wesley},
	Title = {The Pragmatic Programmer: From Journeyman to Master},
	Year = {2000}}

@book{Thoma10,
	Author = {Dave Thomas and Andy Hunt and Chad Fowler},
	Date-Added = {2010-12-19 22:06:18 +0200},
	Date-Modified = {2010-12-19 22:07:26 +0200},
	Edition = {3rd},
	Publisher = {The Pragmatic Programmers},
	Title = {Programming Ruby},
	Year = {2010}}

@book{Spine03,
	Author = {Diomidis Spinellis},
	Date-Added = {2010-12-19 22:02:46 +0200},
	Date-Modified = {2010-12-19 22:04:56 +0200},
	Publisher = {Addison Wesley},
	Title = {Code Reading: The Open Source Perspective},
	Year = {2003}}

@book{Kerni99,
	Author = {Brian W. Kernighan and Rob Pike},
	Date-Added = {2010-12-19 21:59:59 +0200},
	Date-Modified = {2010-12-19 22:01:52 +0200},
	Publisher = {Addison-Wesley Professional},
	Title = {The practice of programming},
	Year = {1999}}

@misc{Wheel10,
	Author = {David A. Wheeler},
	Date-Added = {2010-12-14 10:40:20 +0200},
	Date-Modified = {2010-12-19 21:59:49 +0200},
	Howpublished = {Online},
	Month = {Feb},
	Title = {Linux Kernel 2.6: It's Worth More!},
	Year = {2010},
	Bdsk-Url-1 = {http://www.dwheeler.com/essays/linux-kernel-cost.html}}

@article{Berns83,
	Acmid = {319998},
	Address = {New York, NY, USA},
	Author = {Bernstein, Philip A. and Goodman, Nathan},
	Date-Added = {2010-12-13 19:53:20 +0200},
	Date-Modified = {2010-12-13 19:54:08 +0200},
	Issn = {0362-5915},
	Issue = {4},
	Journal = {ACM Trans. Database Syst.},
	Keywords = {transaction processing},
	Month = {December},
	Numpages = {19},
	Pages = {465--483},
	Publisher = {ACM},
	Title = {Multiversion concurrency control---theory and algorithms},
	Volume = {8},
	Year = {1983},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QPU11bHRpdmVyc2lvbiBjb25jdXJyZW5jeSBjb250cm9sLS0tdGhlb3J5IGFuZCBhbGdvcml0aG1zMC5wZGbSFwsYGVdOUy5kYXRhTxECQAAAAAACQAACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAy2htzkgrAAAALxhOH011bHRpdmVyc2lvbiBjb25jdXJyIzJGMTg2NC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvGGTJLBxDAAAAAAAAAAAAAQACAAAJIAAAAAAAAAAAAAAAAAAAAARtaXNjABAACAAAy2hfvgAAABEACAAAySwOMwAAAAEAFAAvGE4ALxdbAC8WRgAFyHYAALlWAAIAWE1hY2ludG9zaCBIRDpVc2VyczoAZ291c2lvc2c6AERvY3VtZW50czoAYmlibGlzdHM6AG1pc2M6AE11bHRpdmVyc2lvbiBjb25jdXJyIzJGMTg2NC5wZGYADgB8AD0ATQB1AGwAdABpAHYAZQByAHMAaQBvAG4AIABjAG8AbgBjAHUAcgByAGUAbgBjAHkAIABjAG8AbgB0AHIAbwBsAC0ALQAtAHQAaABlAG8AcgB5ACAAYQBuAGQAIABhAGwAZwBvAHIAaQB0AGgAbQBzADAALgBwAGQAZgAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAGRVc2Vycy9nb3VzaW9zZy9Eb2N1bWVudHMvYmlibGlzdHMvbWlzYy9NdWx0aXZlcnNpb24gY29uY3VycmVuY3kgY29udHJvbC0tLXRoZW9yeSBhbmQgYWxnb3JpdGhtczAucGRmABMAAS8AABUAAgAP//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4AzgDTANsDHwMhAyYDMQM6A0gDTANTA1wDYQNuA3EDgwOGA4sAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAADjQ==}}

@inproceedings{Pavlo09,
	Acmid = {1559865},
	Address = {New York, NY, USA},
	Author = {Pavlo, Andrew and Paulson, Erik and Rasin, Alexander and Abadi, Daniel J. and DeWitt, David J. and Madden, Samuel and Stonebraker, Michael},
	Booktitle = {Proceedings of the 35th SIGMOD international conference on Management of data},
	Date-Added = {2010-12-13 18:56:37 +0200},
	Date-Modified = {2010-12-13 18:56:45 +0200},
	Isbn = {978-1-60558-551-2},
	Keywords = {benchmarks, mapreduce, parallel database},
	Location = {Providence, Rhode Island, USA},
	Numpages = {14},
	Pages = {165--178},
	Publisher = {ACM},
	Series = {SIGMOD '09},
	Title = {A comparison of approaches to large-scale data analysis},
	Year = {2009},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QPEEgY29tcGFyaXNvbiBvZiBhcHByb2FjaGVzIHRvIGxhcmdlLXNjYWxlIGRhdGEgYW5hbHlzaXMwLnBkZtIXCxgZV05TLmRhdGFPEQI+AAAAAAI+AAIAAAxNYWNpbnRvc2ggSEQAAAAAAAAAAAAAAAAAAADLaG3OSCsAAAAvGE4fQSBjb21wYXJpc29uIG9mIGFwcHIjMkYxODVDLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8YXMksDucAAAAAAAAAAAABAAIAAAkgAAAAAAAAAAAAAAAAAAAABG1pc2MAEAAIAADLaF++AAAAEQAIAADJLADXAAAAAQAUAC8YTgAvF1sALxZGAAXIdgAAuVYAAgBYTWFjaW50b3NoIEhEOlVzZXJzOgBnb3VzaW9zZzoARG9jdW1lbnRzOgBiaWJsaXN0czoAbWlzYzoAQSBjb21wYXJpc29uIG9mIGFwcHIjMkYxODVDLnBkZgAOAHoAPABBACAAYwBvAG0AcABhAHIAaQBzAG8AbgAgAG8AZgAgAGEAcABwAHIAbwBhAGMAaABlAHMAIAB0AG8AIABsAGEAcgBnAGUALQBzAGMAYQBsAGUAIABkAGEAdABhACAAYQBuAGEAbAB5AHMAaQBzADAALgBwAGQAZgAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAGNVc2Vycy9nb3VzaW9zZy9Eb2N1bWVudHMvYmlibGlzdHMvbWlzYy9BIGNvbXBhcmlzb24gb2YgYXBwcm9hY2hlcyB0byBsYXJnZS1zY2FsZSBkYXRhIGFuYWx5c2lzMC5wZGYAABMAAS8AABUAAgAP//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4AzQDSANoDHAMeAyMDLgM3A0UDSQNQA1kDXgNrA24DgAODA4gAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAADig==}}

@book{Witte05,
	Author = {Ian H. Witten and Eibe Frank},
	Date-Added = {2010-12-08 18:05:14 +0200},
	Date-Modified = {2010-12-08 18:06:09 +0200},
	Month = {June},
	Publisher = {Morgan Kaufmann},
	Title = {Data Mining: Practical Machine Learning Tools and Techniques},
	Year = {2005}}

@book{Spols04,
	Author = {Joel Spolsky},
	Date-Added = {2010-09-14 16:30:41 +0300},
	Date-Modified = {2010-09-14 16:31:28 +0300},
	Month = {Aug},
	Publisher = {Apress},
	Title = {Joel on Software},
	Year = {2004}}

@book{Graha04,
	Author = {Paul Graham},
	Date-Added = {2010-09-14 16:29:08 +0300},
	Date-Modified = {2010-09-14 16:29:56 +0300},
	Publisher = {O'Reilly Media},
	Title = {Hackers and Painters: Big Ideas from the Computer Age},
	Year = {2004}}

@techreport{Lyman03,
	Author = {Peter Lyman and Hal R. Varian},
	Date-Added = {2010-09-06 18:21:38 +0300},
	Date-Modified = {2010-09-06 18:23:06 +0300},
	Institution = {University of California at Berkeley},
	Title = {How Much Information 2003?},
	Year = {2003},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QH0hvdyBNdWNoIEluZm9ybWF0aW9uIDIwMDM/MC5wZGbSFwsYGVdOUy5kYXRhTxEB5gAAAAAB5gACAAAMTWFjaW50b3NoIEhEAAAAAAAAAAAAAAAAAAAAy2htzkgrAAAALxhOH0hvdyBNdWNoIEluZm9ybWF0aW9uIDIwMDM/MC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvGGLIqtLDAAAAAAAAAAAAAQACAAAJIAAAAAAAAAAAAAAAAAAAAARtaXNjABAACAAAy2hfvgAAABEACAAAyKq2owAAAAEAFAAvGE4ALxdbAC8WRgAFyHYAALlWAAIAWE1hY2ludG9zaCBIRDpVc2VyczoAZ291c2lvc2c6AERvY3VtZW50czoAYmlibGlzdHM6AG1pc2M6AEhvdyBNdWNoIEluZm9ybWF0aW9uIDIwMDM/MC5wZGYADgBAAB8ASABvAHcAIABNAHUAYwBoACAASQBuAGYAbwByAG0AYQB0AGkAbwBuACAAMgAwADAAMwA/ADAALgBwAGQAZgAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEZVc2Vycy9nb3VzaW9zZy9Eb2N1bWVudHMvYmlibGlzdHMvbWlzYy9Ib3cgTXVjaCBJbmZvcm1hdGlvbiAyMDAzPzAucGRmABMAAS8AABUAAgAP//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4AsAC1AL0CpwKpAq4CuQLCAtAC1ALbAuQC6QL2AvkDCwMOAxMAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAADFQ==}}

@article{Marco05,
	Address = {New York, NY, USA},
	Author = {Esperanza Marcos},
	Date-Added = {2006-05-25 23:19:04 +0300},
	Date-Modified = {2010-09-06 18:21:32 +0300},
	Issn = {0163-5948},
	Journal = {SIGSOFT Softw. Eng. Notes},
	Local-Url = {file://localhost/Volumes/Files/Documents/PhD/papers/Misc/Software%20engineering%20research%20versus%20software%20development.pdf},
	Number = {4},
	Pages = {1--7},
	Publisher = {ACM Press},
	Title = {Software engineering research versus software development},
	Volume = {30},
	Year = {2005},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/1082983.1083005}}

@inproceedings{Dodig02,
	Address = {Sk{\"{o}}vde},
	Author = {Gordana Dodig-Crnkovic},
	Booktitle = {Conference for the Promotion of Research in IT at New Universities and at University Colleges in Sweden},
	Date-Added = {2006-05-25 14:59:08 +0300},
	Date-Modified = {2010-09-06 18:21:32 +0300},
	Month = {April},
	Title = {Scientific Methods in Computer Science},
	Year = {2002},
	Bdsk-Url-1 = {http://www.mrtc.mdh.se/index.phtml?choice=publications&id=0446}}

@phdthesis{Wrigh01,
	Author = {G.M. Wright},
	Date-Added = {2006-05-25 11:47:45 +0300},
	Date-Modified = {2006-05-25 11:48:20 +0300},
	Month = {January},
	School = {University of Manchester},
	Title = {A Single-Chip Multiprocessor Architecture with Hardware Thread Support},
	Year = {2001}}

@misc{Machi98,
	Address = {http://www.acm.org/class/1998/overview.html},
	Date-Added = {2006-05-23 23:41:39 +0300},
	Date-Modified = {2010-09-06 18:21:32 +0300},
	Howpublished = {Online},
	Organization = {Association For Computing Machinery},
	Title = {{ACM} Computing Classification System},
	Year = {1998},
	Bdsk-Url-1 = {http://www.acm.org/class/1998/overview.html}}

@article{Peter83,
	Abstract = {The problem of asynchronous processes reading shared data while the data are being modified by another process is considered. This problem differs from the standard readers/writers problem in that concurrent reading while writing is allowed. The model used here strongly limits the use and size of the shared variables. If multiple copies of the shared data are allowed, then simple, efficient solutions are found. In general, solutions which are more time efficient because they avoid waiting are seen to require more copies of the shared data. The number of copies used by all algorithms is shown to be the best possible. The main solution demonstrates that any system of processes which uses large distributed variables can be strongly simulated by a system which uses only binary distributed variables.},
	Annote = {The basics of the copy on write technique},
	Author = {Gary L. Peterson},
	Date-Added = {2006-02-13 15:58:19 +0200},
	Date-Modified = {2010-09-06 18:21:32 +0300},
	Journal = {ACM Trans. Program. Lang. Syst.},
	Local-Url = {file://localhost/Volumes/Files/Documents/PhD/papers/Misc/Concurrent%20Reading%20While%20Writing.pdf},
	Number = {1},
	Pages = {46--55},
	Title = {Concurrent Reading While Writing},
	Volume = {5},
	Year = {1983},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/357195.357198}}

@techreport{Herma47,
	Address = {Princeton, N. J},
	Author = {Goldstine Herman and John von Neumann},
	Date-Added = {2006-01-09 14:11:28 +0200},
	Date-Modified = {2006-01-09 14:15:18 +0200},
	Institution = {Inst. for Advanced Study},
	Number = {Vol. 1--3},
	Title = {Planning and coding of problems for an electronic computing instrument},
	Year = {1947}}

@techreport{ISOI05,
	Author = {ISO/IEC 9899:TC/2},
	Date-Added = {2005-11-29 13:13:52 +0200},
	Date-Modified = {2005-11-29 13:18:59 +0200},
	Institution = {ISO/IEC},
	Title = {Programming Languages - {C}},
	Type = {Committee Draft},
	Year = {2005}}

@article{Henne82,
	Abstract = {The long-standing conflict between code optimization and symbolic debugging is examined. The  effects of local and global optimizations on the variables of a program are categorized, and models for  representing  the effect of optimizations are given. Algorithms use these models to determine the  subset of variables whose values do not correspond to those in the original program. Restoring these  variables to their correct values is investigated, and empirical results from the application of these  algorithms to local optimization are also presented. },
	Author = {John Hennessy},
	Date-Modified = {2010-09-06 18:21:32 +0300},
	Issn = {0164-0925},
	Journal = {ACM Trans. Program. Lang. Syst.},
	Local-Url = {file://localhost/Volumes/Files/Documents/PhD/papers/Misc/Symbolic%20Debugging%20of%20Optimized%20Code.pdf},
	Number = {3},
	Pages = {323--344},
	Publisher = {ACM Press},
	Title = {Symbolic Debugging of Optimized Code},
	Volume = {4},
	Year = {1982},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/357172.357173}}

@misc{wiki,
	Date-Modified = {2005-03-29 09:49:36 +0300},
	Howpublished = {Online},
	Key = {WikiPedia},
	Note = {http://en.wikipedia.org/wiki/Main\_Page},
	Title = {{WikiPedia}, the free encyclopedia},
	Year = {2005}}

@article{Hanki96,
	Annote = {An article that describes what the future directions on programming language design should be, according to an expert comitee meeting in 1996. Interesting directions:
Implementation -> Memory management: Cache efficient garbage collection
Type systems -> Type-based compilation: Typed program analysis to exploit possible optimisations},
	Author = {Chris Hankin and Hanne Riis Nielson and Jens Palsberg},
	Date-Modified = {2010-09-06 18:21:32 +0300},
	Issn = {0360-0300},
	Journal = {ACM Comput. Surv.},
	Local-Url = {file://localhost/Volumes/Files/Documents/PhD/papers/Misc/Strategic%20directions%20in%20research%20on%20programming%20languages.pdf},
	Number = {4},
	Pages = {644--652},
	Publisher = {ACM Press},
	Title = {Strategic directions in research on programming languages},
	Volume = {28},
	Year = {1996},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/242223.242260}}

@article{Ferra87,
	Abstract = {In this paper we present an intermediate program representation, called the program dependence graph (PDG), that makes explicit both the data and control dependences for each operation in a program. Data dependences have been used to represent only the relevant data flow relationships of a program. Control dependences are introduced to analogously represent only the essential control flow relationships of a program. Control dependences are derived from the usual control flow graph. Many traditional optimizations operate more efficiently on the PDG. Since dependences in the PDG connect computationally related parts of the program, a single walk of these dependences is sufficient to perform many optimizations. The PDG allows transformations such as vectorization, that previously required special treatment of control dependence, to be performed in a manner that is uniform for both control and data dependences. Program transformations that require interaction of the two dependence types can also be easily handled with our representation. As an example, an incremental approach to modifying data dependences resulting from branch deletion or loop unrolling is introduced. The PDG supports incremental optimization, permitting transformations to be triggered by one another and applied only to affected dependences.},
	Author = {Jeanne Ferrante and Karl J. Ottenstein and Joe D. Warren},
	Date-Modified = {2010-09-06 18:21:32 +0300},
	Issn = {0164-0925},
	Journal = {ACM Trans. Program. Lang. Syst.},
	Local-Url = {file://localhost/Volumes/Files/Documents/PhD/papers/Misc/The%20program%20dependence%20graph%20and%20its%20use%20in%20optimization.pdf},
	Number = {3},
	Pages = {319--349},
	Publisher = {ACM Press},
	Title = {The program dependence graph and its use in optimization},
	Volume = {9},
	Year = {1987},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/24039.24041}}

@article{Steen89,
	Abstract = {Register allocation is an important optimization in many compilers, but with per-procedure register allocation, it is often not possible to make good use of a large register set. Procedure calls limit the improvement from global register allocation, since they force variables allocated to registers to be saved and restored. This limitation is more pronounced in LISP programs due to the higher frequency of procedure calls. An interprocedural register allocation algorithm is developed by simplifying a version of interprocedural graph coloring. The simplification corresponds to a bottom-up coloring of the interference graph. The scheme is evaluated using a number of LISP programs. The evaluation considers the scheme's limitations and compares these ``software register windows'' against the hardware register windows used in the Berkeley RISC and SPUR processors.},
	Author = {Peter A. Steenkiste and John L. Hennessy},
	Date-Modified = {2010-09-06 18:21:32 +0300},
	Issn = {0164-0925},
	Journal = {ACM Trans. Program. Lang. Syst.},
	Local-Url = {file://localhost/Volumes/Files/Documents/PhD/papers/Misc/A%20simple%20interprocedural%20register%20allocation%20algorithm%20and%20its%20effectiveness%20for%20LISP.pdf},
	Number = {1},
	Pages = {1--32},
	Publisher = {ACM Press},
	Title = {A simple interprocedural register allocation algorithm and its effectiveness for LISP},
	Volume = {11},
	Year = {1989},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/59287.59289}}

@article{Aho89,
	Abstract = {Compiler-component generators, such as lexical analyzer generators and parser generators, have long been used to facilitate the construction of compilers. A tree-manipulation language called twig has been developed to help construct efficient code generators. Twig transforms a tree-translation scheme into a code generator that combines a fast top-down tree-pattern matching algorithm with dynamic programming. Twig has been used to specify and construct code generators for several experimental compilers targeted for different machines.},
	Author = {Alfred V. Aho and Mahadevan Ganapathi and Steven W. K. Tjiang},
	Date-Modified = {2010-09-06 18:21:32 +0300},
	Issn = {0164-0925},
	Journal = {ACM Trans. Program. Lang. Syst.},
	Local-Url = {file://localhost/Volumes/Files/Documents/PhD/papers/Misc/Code%20generation%20using%20tree%20matching%20and%20dynamic%20programming.pdf},
	Number = {4},
	Pages = {491--516},
	Publisher = {ACM Press},
	Title = {Code generation using tree matching and dynamic programming},
	Volume = {11},
	Year = {1989},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/69558.75700}}

@article{Lampo82,
	Abstract = {Reliable computer systems must handle malfunctioning components that give conflicting information  to different parts of the system. This situation can be expressed abstractly in terms of a group of  generals of the Byzantine army camped with their troops around an enemy city. Communicating only  by messenger, the generals must agree upon a common battle plan. However, one or more of them  may be traitors who will try to confuse the others. The problem is to find an algorithm to ensure that  the loyal generals will reach agreement.  It is shown that, using only oral messages, this problem is  solvable if and only if more than two-thirds of the generals are loyal; so a single traitor can confound  two loyal generals. With unforgeable written messages, the problem is solvable for any number of  generals and possible traitors.  Applications of the solutions to reliable computer systems are then  discussed.  },
	Author = {Leslie Lamport and Robert Shostak and Marshall Pease},
	Date-Modified = {2010-09-06 18:21:32 +0300},
	Issn = {0164-0925},
	Journal = {ACM Trans. Program. Lang. Syst.},
	Local-Url = {file://localhost/Volumes/Files/Documents/PhD/papers/Misc/The%20Byzantine%20Generals%20Problem.pdf},
	Number = {3},
	Pages = {382--401},
	Publisher = {ACM Press},
	Title = {The Byzantine Generals Problem},
	Volume = {4},
	Year = {1982},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/357172.357176}}

@article{Chand84,
	Abstract = {The problem of resolving conflicts between processes in distributed systems is of practical importance.  A conflict between a set of processes must be resolved in favor of some (usually one) process and  against the others: a favored process must have some property that distinguishes it from others. To  guarantee fairness, the distinguishing property must be such that the process selected for favorable  treatment is not always the same. A distributed implementation of an acyclic precedence graph, in  which the depth of a  process (the longest chain of predecessors)  is a  distinguishing property, is  presented. A simple conflict resolution rule coupled with the acyclic graph ensures fair resolution of  all conflicts. To make the problem concrete, two paradigms are presented: the well-known distributed  dining philosophers problem and a generalization of it, the distributed drinking philosophers problem.},
	Author = {K. M. Chandy and J. Misra},
	Date-Modified = {2010-09-06 18:21:32 +0300},
	Issn = {0164-0925},
	Journal = {ACM Trans. Program. Lang. Syst.},
	Number = {4},
	Pages = {632--646},
	Publisher = {ACM Press},
	Title = {The drinking philosophers problem},
	Volume = {6},
	Year = {1984},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/1780.1804}}

@article{Tichy86,
	Abstract = {With current compiler technology, changing a single line in a large software system may trigger massive recompilations. If the change occurs in a file with shared declarations, all compilation units depending upon that file must be recompiled to assure consistency. However, many of those recompilations may be redundant, because the change may affect only a small fraction of the overall system. Smart recompilation is a method for reducing the set of modules that must be recompiled after a change. The method determines whether recompilation is necessary by isolating the differences among program modules and analyzing the effect of changes. The method is applicable to languages with and without overloading. A prototype demonstrates that the method is efficient and can be added with modest effort to existing compilers.  },
	Author = {Walter F. Tichy},
	Date-Modified = {2010-09-06 18:21:32 +0300},
	Issn = {0164-0925},
	Journal = {ACM Trans. Program. Lang. Syst.},
	Local-Url = {file://localhost/Volumes/Files/Documents/PhD/papers/Misc/Smart%20Recompilation.pdf},
	Number = {3},
	Pages = {273--291},
	Publisher = {ACM Press},
	Title = {Smart recompilation},
	Volume = {8},
	Year = {1986},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/5956.5959}}
